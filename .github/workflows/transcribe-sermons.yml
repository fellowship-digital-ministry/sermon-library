name: Transcribe and Embed Sermons

on:
  schedule:
    # Run every day at 2AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allows manual triggering

# Add permissions block
permissions:
  contents: write

jobs:
  transcribe:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for commits
          token: ${{ secrets.PAT_TOKEN }}  # Use a Personal Access Token
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Update to latest yt-dlp to handle 2025 YouTube changes
          pip install --upgrade yt-dlp
          pip install pandas openai tqdm pydub
          # Install the correct Pinecone package - new version
          pip uninstall -y pinecone-client
          pip install pinecone
      
      # Create cookies file from GitHub secret
      - name: Setup YouTube Cookies
        run: |
          # Create cookies.txt file from GitHub secret
          echo "${{ secrets.YOUTUBE_COOKIES }}" > $HOME/youtube_cookies.txt
          # Make sure the file exists and has content
          if [ ! -s "$HOME/youtube_cookies.txt" ]; then
            echo "Warning: Cookies file is empty. This may cause authentication issues."
          else
            echo "Cookies file created successfully"
          fi
        shell: bash
      
      - name: Configure Git
        run: |
          git config --global user.name "Sermon Transcription Bot"
          git config --global user.email "fellowship-digital-ministry@proton.me"
      
      - name: Run sermon monitoring and processing
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Pass cookies location to the script
          YOUTUBE_COOKIES: $HOME/youtube_cookies.txt
        run: |
          # Output current time
          date
          echo "Starting sermon monitoring process"
          
          # Check if 'transcription' directory exists
          ls -la
          if [ -d "transcription" ]; then
            echo "Found transcription directory"
            ls -la transcription
          else
            echo "ERROR: transcription directory not found"
          fi
          
          # Check if monitor_channel.py exists
          if [ -f "transcription/monitor_channel.py" ]; then
            echo "Found monitor_channel.py"
          else
            echo "ERROR: monitor_channel.py not found"
            find . -name "monitor_channel.py" -type f
          fi
          
          # Run the channel monitoring script
          cd transcription
          python monitor_channel.py --channel "https://www.youtube.com/@chrismann9821" --process --cleanup --cookies "$HOME/youtube_cookies.txt"
        shell: bash
      
      # Add the embedding step here
      - name: Generate embeddings for new transcripts
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT || 'us-east-1' }}
          PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME || 'sermon-embeddings' }}
        run: |
          # Check if the transcript_to_embeddings.py script exists
          if [ -f "tools/transcript_to_embeddings.py" ]; then
            echo "Found transcript_to_embeddings.py script, running..."
            python tools/transcript_to_embeddings.py --skip_existing
          else
            echo "ERROR: transcript_to_embeddings.py not found"
            find . -name "transcript_to_embeddings.py" -type f
          fi
      
      # Add this new step to update metadata in Pinecone
      - name: Update Pinecone metadata from JSON files
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT || 'us-east-1' }}
          PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME || 'sermon-embeddings' }}
        run: |
          # Check if the update_pinecone_metadata.py script exists
          if [ -f "api/update_pinecone_metadata.py" ]; then
            # Copy the metadata utilities to the tools directory
            cp api/metadata_utils.py tools/
            
            # Run the metadata update script for only recent changes
            python api/update_pinecone_metadata.py --only-recent --days=7
          else
            echo "WARNING: update_pinecone_metadata.py not found"
            find . -name "update_pinecone_metadata.py" -type f
          fi
      
      # Clean up cookies after use for security
      - name: Clean up cookies
        run: rm -f $HOME/youtube_cookies.txt
        if: always()  # Always run cleanup even if previous steps fail
      
      # First pull latest changes before committing
      - name: Pull latest changes
        run: git pull origin main
        
      - name: Commit and push changes
        run: |
          git add transcription/data/transcripts/
          git add transcription/data/metadata/
          git add transcription/data/video_list.csv
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add new sermon transcripts and subtitles [skip ci]"
            git push
          fi