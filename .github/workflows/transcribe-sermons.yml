name: Transcribe and Embed Sermons

on:
  schedule:
    # Run every day at 7AM UTC
    - cron: '0 7 * * *'
  workflow_dispatch:  # Allows manual triggering

# Add permissions block
permissions:
  contents: write

jobs:
  transcribe:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history for commits
          token: ${{ secrets.PAT_TOKEN }}  # Use a Personal Access Token
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip uninstall -y pinecone-client
          pip install -r requirements.txt
          # Update to latest yt-dlp to handle current YouTube changes
          pip install --upgrade yt-dlp
          pip install pandas pytube
      
      # Create properly formatted cookies file from GitHub secret
      - name: Setup YouTube Cookies
        run: |
          # Create cookies.txt file with correct Netscape format header
          echo "# Netscape HTTP Cookie File" > $HOME/youtube_cookies.txt
          echo "# https://curl.haxx.se/docs/http-cookies.html" >> $HOME/youtube_cookies.txt
          echo "# This file was generated by libcurl! Edit at your own risk." >> $HOME/youtube_cookies.txt
          echo "" >> $HOME/youtube_cookies.txt  # Add empty line
          
          # Add the cookies from secrets
          echo "${{ secrets.YOUTUBE_COOKIES }}" >> $HOME/youtube_cookies.txt
          
          # Set proper permissions
          chmod 600 $HOME/youtube_cookies.txt
          
          # Verify the file exists
          if [ -s "$HOME/youtube_cookies.txt" ]; then
            echo "Cookies file created successfully"
          else
            echo "WARNING: Cookies file is empty or missing"
          fi
        shell: bash
      
      - name: Configure Git
        run: |
          git config --global user.name "Sermon Transcription Bot"
          git config --global user.email "fellowship-digital-ministry@proton.me"
      
      # Modify the monitor_channel.py file directly to limit to 5 videos
      - name: Update monitor script configuration
        run: |
          # Edit the file directly to set playlist limit to 5
          sed -i 's/--playlist-end", "30"/--playlist-end", "5"/' transcription/monitor_channel.py
          echo "Updated monitor_channel.py to limit to 5 videos"
        shell: bash
      
      - name: Run sermon monitoring
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Pass cookies location to the script
          YOUTUBE_COOKIES: $HOME/youtube_cookies.txt
        run: |
          # Output current time for logging
          date
          echo "Starting sermon monitoring process"
          
          # Run the monitoring script with improved cookie handling
          cd transcription
          python monitor_channel.py --channel "https://www.youtube.com/@chrismann9821" --process --cleanup --cookies "$HOME/youtube_cookies.txt"
        shell: bash
      
      # Add the embedding step
      - name: Generate embeddings for new transcripts
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT || 'us-east-1' }}
          PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME || 'sermon-embeddings' }}
        run: |
          python tools/transcript_to_embeddings.py --skip_existing
      
      # Update metadata in Pinecone
      - name: Update Pinecone metadata from JSON files
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT || 'us-east-1' }}
          PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME || 'sermon-embeddings' }}
        run: |
          # Copy the metadata utilities to the tools directory
          cp api/metadata_utils.py tools/
          
          # Run the metadata update script for only recent changes
          python api/update_pinecone_metadata.py --only-recent --days=7
      
      # Clean up cookies after use for security
      - name: Clean up cookies
        run: rm -f $HOME/youtube_cookies.txt
        if: always()  # Always run cleanup even if previous steps fail
      
      # First pull latest changes before committing
      - name: Pull latest changes
        run: git pull origin main
        
      - name: Commit and push changes
        run: |
          git add transcription/data/transcripts/
          git add transcription/data/metadata/
          git add transcription/data/video_list.csv
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add new sermon transcripts and subtitles [skip ci]"
            git push
          fi